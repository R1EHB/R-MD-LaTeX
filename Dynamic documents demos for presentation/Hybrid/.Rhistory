nrow(no_south)
murders_nw <-filter(murders, region %in% c("Northeast", "West"))
nrow(murders_nw)
my_states <- filter(murders, region %in% c("Northeast", "West") & rate < 1)
select(my_states, state, rate, rank) %>% View()
head(murders)
help(sefdiff)
help(setdiff)
data("iris")
iris
remove(iris)
x1 <- data.frame(c1header = 1:3,)
x1 <- data.frame(c1header = 1:3,
x1 <- data.frame(c1head = c("A","B","C"),
c2head = 1:3))
head(x1)
x1 <- data.frame(c1head = c("A","B","C"),
c2head = 1:3))
x1 <- data.frame(c1head = c("A","B","C"),
c2head = 1:3)
head(x1)
x2 <- data.frame(c1head = c("B","C","D"),
c2head = 2:4)
as.character(1:3)
as.character.factor(1:3)
help(as)
head(x2)
setdiff(x1,x2) %>% head()
setdiff(x1,x2) %>% head(header=F)
setdiff(x1,x2,header=F) %>% head()
setdiff(x1,x2) %>% head()
setdiff(x1,x2,header=F) %>% head()
setdiff(x2,x1) %>% head()
setdiff(x2,x1,header=F) %>% head()
source('~/.active-rstudio-document', echo=TRUE)
x1 <- data.frame(c1head = c("A","B","C"),
c2head = 1:3)
x2 <- data.frame(c1head = c("B","C","D"),
c2head = 2:4)
setdiff(x1,x2) %>% head()
setdiff(x1,x2,header=F) %>% head()
setdiff(x2,x1) %>% head()
setdiff(x2,x1,header=F) %>% head()
x1 <- data.frame(c1head = c("A","B","C"),
c2head = 1:3)
x2 <- data.frame(c1head = c("B","C","D"),
c2head = 2:4)
setdiff(x1,x2) %>% head()
setdiff(x1,x2,header=FALSE) %>% head()
setdiff(x2,x1) %>% head()
setdiff(x2,x1,header=FALSE) %>% head()
getwd()
help(read.csv)
help(read_csv)
help(html_nodes)
??html_nodes
help(pandoc)
dslabs
library(dslabs)
??dslabs
help(dslabs)
?dslabs
??dslabs
library(dplyr)
library(dslabs)
library(ggplot2)
data(murders)
pattern1 <- “mo*”;
str_detect(animals, pattern4)
animals <- c("moose", "monkey", "meerkat", "mountain lion")
pattern1 <- “mo*”
pattern2 <- “mo?”
pattern3 <- “mo+”
pattern4 <- “moo*”
str_detect(animals, pattern1)
str_detect(animals, pattern2)
str_detect(animals, pattern3)
str_detect(animals, pattern4)
animals <- c("moose", "monkey", "meerkat", "mountain lion")
pattern1 <- “mo*”
pattern2 <- “mo?”
pattern3 <- “mo+”
pattern4 <- “moo*”
str_detect(animals, pattern1)
str_detect(animals, pattern2)
str_detect(animals, pattern3)
str_detect(animals, pattern4)
pattern5 <- "mo*"
pattern6 <- "mo?"
pattern7 <- "mo+"
pattern8 <- "moo*"
str_detect(animals, pattern5)
str_detect(animals, pattern6)
str_detect(animals, pattern7)
str_detect(animals, pattern8)
??str_detect
library(stringr)
animals <- c("moose", "monkey", "meerkat", "mountain lion")
pattern1 <- “mo*”
pattern2 <- “mo?”
pattern3 <- “mo+”
pattern4 <- “moo*”
str_detect(animals, pattern1)
str_detect(animals, pattern2)
str_detect(animals, pattern3)
str_detect(animals, pattern4)
pattern5 <- "mo*"
pattern6 <- "mo?"
pattern7 <- "mo+"
pattern8 <- "moo*"
str_detect(animals, pattern5)
str_detect(animals, pattern6)
str_detect(animals, pattern7)
str_detect(animals, pattern8)
print(animals)
library(dplyr); glimpse(animals)
s <- c("70","5 ft","4'11","",".","Six feet")
s
s <- c("70","5 ft","4'11","",".","Six feet")
pattern1 <- "\\d|ft"
pattern2 <- "\d|ft"
pattern3 <- "\\d\\d|ft"
pattern4 <- "\\d|feet"
str_view_all(s, pattern1)
str_view_all(s, pattern2)
str_view_all(s, pattern3)
str_view_all(s, pattern4)
str_view_all(s, pattern1)
str_view_all(s, pattern3)
str_view_all(s, pattern4)
str_view_all(s, pattern1)
str_view_all(s, pattern3)
str_view_all(s, pattern4)
str_view_all(s, pattern3)
str_view_all(s, pattern4)
str_view_all(s, pattern3)
str_view_all(s, pattern1)
library(dslabs)
path <- system.file("extdata", package = "dslabs")
filename <- file.path(path, "life-expectancy-and-fertility-two-countries-example.csv")
raw_dat <- read_csv(filename)
library(readr)
raw_dat <- read_csv(filename)
select(raw_dat,1:5)
gather(raw_dat, key, value, -country)
head(dat)
dat <- gather(raw_dat, key, value, -country)
head(dat)
library(dplyr)
dat <- gather(raw_dat, key, value, -country)
library(tidyr)
dat <- gather(raw_dat, key, value, -country)
head(dat)
separate(dat, key, c("year", "variable"), "_"))
separate(dat, key, c("year", "variable"), "_")
separate(dat, key, c("year", "variable", "overflow"), "_"), fill = "right" #also, _ is default separator
separate(dat, key, c("year", "variable", "overflow"), sep = "_", fill = "right") #also, _ is default separator
separate(dat, key, c("year", "variable"), sep = "_", extra="merge")
dat %>%
separate(key, c("year", "variable"), sep = "_", extra="merge") %>%
spread(variable, value)
knit_with_parameters('//aa.ad.epa.gov/ORD/RTP/USERS/E-J/eli02/Net MyDocuments/EYL/GDI VBS files/recreate_in_R.Rmd')
library(readr, dplyr, tidyverse, ggplot2)
library(readr, dplyr, tidyverse)
?library
library(readr, dplyr, tidyverse, maggritr)
knitr::opts_chunk$set(echo = TRUE)
library(readr, dplyr, tidyverse)
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "1", ylab = "$x_{i+1}=x_i+\\epsilon_{i+1}$",
xlab = "step")
plot(x, type = "l", ylab = "$x_{i+1}=x_i+\\epsilon_{i+1}$",
xlab = "step")
knitr::opts_chunk$set(echo = TRUE)
\documentclass{article}
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "l", ylab = "$x_{i+1}=x_i+\\epsilon_{i+1}$",
xlab = "step")
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "l", ylab = x_{i+1}=x_i+\\epsilon_{i+1},
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "l", ylab = $x_{i+1}=x_i+\\epsilon_{i+1}$,
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "l", ylab = expression(x_{i+1}=x_i+\\epsilon_{i+1}),
set.seed(1213) # for reproducibility of random numbers
x <- cumsum(rnorm(100))
plot(x, type = "l", ylab = "$x_{i+1}=x_i+\\epsilon_{i+1}$",
xlab = "step")
library(dslabs)
?dslabs
??dslabs
?string_trim
library(stringr)
?str_trim
pattern <- "^([4-7])\\s*'\\s*(\\d+\\.?\\d*)$"
reported_heights
smallest <- 50
tallest <- 84
new_heights <- reported_heights %>%
mutate(original = height,
height = words_to_numbers(height) %>% convert_format()) %>%
extract(height, c("feet", "inches"), regex = pattern, remove = FALSE) %>%
mutate_at(c("height", "feet", "inches"), as.numeric) %>%
mutate(guess = 12*feet + inches) %>%
mutate(height = case_when(
!is.na(height) & between(height, smallest, tallest) ~ height, #inches
!is.na(height) & between(height/2.54, smallest, tallest) ~ height/2.54, #centimeters
!is.na(height) & between(height*100/2.54, smallest, tallest) ~ height*100/2.54, #meters
!is.na(guess) & inches < 12 & between(guess, smallest, tallest) ~ guess, #feet'inches
TRUE ~ as.numeric(NA))) %>%
select(-guess)
new_heights <- reported_heights %>%
mutate(original = height,
height = words_to_numbers(height) %>% convert_format()) %>%
extract(height, c("feet", "inches"), regex = pattern, remove = FALSE) %>%
mutate_at(c("height", "feet", "inches"), as.numeric) %>%
mutate(guess = 12*feet + inches) %>%
mutate(height = case_when(
!is.na(height) & between(height, smallest, tallest) ~ height, #inches
!is.na(height) & between(height/2.54, smallest, tallest) ~ height/2.54, #centimeters
!is.na(height) & between(height*100/2.54, smallest, tallest) ~ height*100/2.54, #meters
!is.na(guess) & inches < 12 & between(guess, smallest, tallest) ~ guess, #feet'inches
TRUE ~ as.numeric(NA))) %>%
select(-guess)
??mutate
library(tidyr)
new_heights <- reported_heights %>%
mutate(original = height,
height = words_to_numbers(height) %>% convert_format()) %>%
extract(height, c("feet", "inches"), regex = pattern, remove = FALSE) %>%
mutate_at(c("height", "feet", "inches"), as.numeric) %>%
mutate(guess = 12*feet + inches) %>%
mutate(height = case_when(
!is.na(height) & between(height, smallest, tallest) ~ height, #inches
!is.na(height) & between(height/2.54, smallest, tallest) ~ height/2.54, #centimeters
!is.na(height) & between(height*100/2.54, smallest, tallest) ~ height*100/2.54, #meters
!is.na(guess) & inches < 12 & between(guess, smallest, tallest) ~ guess, #feet'inches
TRUE ~ as.numeric(NA))) %>%
select(-guess)
library(tidyr)
library(dplyr)
source('~/.active-rstudio-document', echo=TRUE)
new_heights <- reported_heights %>%
mutate(original = height,
height = words_to_numbers(height) %>% convert_format()) %>%
extract(height, c("feet", "inches"), regex = pattern, remove = FALSE) %>%
mutate_at(c("height", "feet", "inches"), as.numeric) %>%
mutate(guess = 12*feet + inches) %>%
mutate(height = case_when(
!is.na(height) & between(height, smallest, tallest) ~ height, #inches
!is.na(height) & between(height/2.54, smallest, tallest) ~ height/2.54, #centimeters
!is.na(height) & between(height*100/2.54, smallest, tallest) ~ height*100/2.54, #meters
!is.na(guess) & inches < 12 & between(guess, smallest, tallest) ~ guess, #feet'inches
TRUE ~ as.numeric(NA))) %>%
select(-guess)
convert_format <- function(s){
s %>%
str_replace("feet|foot|ft", "'") %>% #convert feet symbols to '
str_replace_all("inches|in|''|\"|cm|and", "") %>%  #remove inches and other symbols
str_replace("^([4-7])\\s*[,\\.\\s+]\\s*(\\d*)$", "\\1'\\2") %>% #change x.y, x,y x y
str_replace("^([56])'?$", "\\1'0") %>% #add 0 when to 5 or 6
str_replace("^([12])\\s*,\\s*(\\d*)$", "\\1\\.\\2") %>% #change european decimal
str_trim() #remove extra space
}
words_to_numbers <- function(s){
str_to_lower(s) %>%
str_replace_all("zero", "0") %>%
str_replace_all("one", "1") %>%
str_replace_all("two", "2") %>%
str_replace_all("three", "3") %>%
str_replace_all("four", "4") %>%
str_replace_all("five", "5") %>%
str_replace_all("six", "6") %>%
str_replace_all("seven", "7") %>%
str_replace_all("eight", "8") %>%
str_replace_all("nine", "9") %>%
str_replace_all("ten", "10") %>%
str_replace_all("eleven", "11")
}
pattern <- "^([4-7])\\s*'\\s*(\\d+\\.?\\d*)$"
smallest <- 50
tallest <- 84
new_heights <- reported_heights %>%
mutate(original = height,
height = words_to_numbers(height) %>% convert_format()) %>%
extract(height, c("feet", "inches"), regex = pattern, remove = FALSE) %>%
mutate_at(c("height", "feet", "inches"), as.numeric) %>%
mutate(guess = 12*feet + inches) %>%
mutate(height = case_when(
!is.na(height) & between(height, smallest, tallest) ~ height, #inches
!is.na(height) & between(height/2.54, smallest, tallest) ~ height/2.54, #centimeters
!is.na(height) & between(height*100/2.54, smallest, tallest) ~ height*100/2.54, #meters
!is.na(guess) & inches < 12 & between(guess, smallest, tallest) ~ guess, #feet'inches
TRUE ~ as.numeric(NA))) %>%
select(-guess)
new_heights %>%
filter(not_inches(original)) %>%
select(original, height) %>%
arrange(height) %>%
View()
??extract
?tidyr::extract
?purrr
library(dslabs)
knitr::opts_chunk$set(echo = TRUE)
library(dslabs)
data("research_funding_rates")
research_funding_rates
library("pdftools")
??pdftools
library("pdftools")
library(pdftools)
install.packages("pdftools")
library("pdftools")
fileURL <- "http://www.pnas.org/content/suppl/2015/09/16/1510159112.DCSupplemental/pnas.201510159SI.pdf"
destfile <- "pnas.201510159SI.pdf"
if (!file.exists(destfile)) {
download.file(fileURL, destfile=destfile, method="auto")
dateDownloaded <- date()
print(dateDownloaded)
}
txt <- pdf_text(destfile)
txt
library("pdftools")
fileURL <- "http://www.pnas.org/content/suppl/2015/09/16/1510159112.DCSupplemental/pnas.201510159SI.pdf"
destfile <- "pnas.201510159SI.pdf"
if (!file.exists(destfile)) {
download.file(fileURL, destfile=destfile, method="auto", mode="wb")
dateDownloaded <- date()
print(dateDownloaded)
}
txt <- pdf_text(destfile)
txt
library("pdftools")
temp_file <- tempfile()
url <- "http://www.pnas.org/content/suppl/2015/09/16/1510159112.DCSupplemental/pnas.201510159SI.pdf"
download.file(url, temp_file, mode="wb")
txt <- pdf_text(temp_file)
file.remove(temp_file)
txt
raw_data_research_funding_rates <- txt[2]
raw_data_research_funding_rates %>% head
library(tidyr)
raw_data_research_funding_rates %>% head
tab <- str_split(raw_data_research_funding_rates, "\n")
library(stringr)
tab <- str_split(raw_data_research_funding_rates, "\n")
head(tab)
head(tab[[1]])
tab<- tab[[1]]
head(tab)
tab
library(stringr)
tab <- str_split(raw_data_research_funding_rates, "\n")
tab
head(tab)
tab[3]
tab[4]
tab[[1]]
tab <- tab[[1]]
tab %>% head
the_names_1 <- tab[3]
the_names_2 <- tab[4]
?str_split
the_names_1 <- the_names_1 %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
the_names_1
the_names_2 <- the_names_2 %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
the_names_2
the_names_2 <- the_names_2 %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
the_names_2
the_names_2 <- the_names_2 %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
the_names_2
the_names_1 <- tab[3]
the_names_2 <- tab[4]
the_names_1 <- the_names_1 %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
the_names_1
the_names_2 <- the_names_2 %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
the_names_2
tmp_names <- str_c(rep(the_names_1, each = 3), the_names_2[-1], sep = "_")
tmp_names
tmp_names <- str_c(rep(the_names_1, each = 3), the_names_2[-1], sep = "_")
the_names <- c(the_names_2[1], tmp_names %>%
str_to_lower() %>%
str_replace_all("\\s", "_")
tmp_names <- str_c(rep(the_names_1, each = 3), the_names_2[-1], sep = "_")
the_names <- c(the_names_2[1], tmp_names) %>%
str_to_lower() %>%
str_replace_all("\\s", "_")
the_names
head(tab)
?mutate_at
??mutate_at
?mutate_at
??mutate_at
tab
?select
??select
??parse_number
library(dplyr)
new_research_funding_rates <- tab[6:14] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringAsFactors = FALSE) %>%
setNames(the_names) %>%
mutate_at(-1, parse_number)
library(dplyr)
library(readr)
new_research_funding_rates <- tab[6:14] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringAsFactors = FALSE) %>%
setNames(the_names) %>%
mutate_at(-1, parse_number)
new_research_funding_rates <- tab[6:14] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names) %>%
mutate_at(-1, parse_number)
head(new_research_funding_rates)
head(research_funding_rates)
identical(new_research_funding_rates, research_funding_rates)
?tidyverse
??tidyverse
library(tidyverse)
tidyverse(packages))
tidyverse(packages)
tidyverse_packages()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(dslabs)
data("research_funding_rates")
research_funding_rates
library("pdftools")
temp_file <- tempfile()
url <- "http://www.pnas.org/content/suppl/2015/09/16/1510159112.DCSupplemental/pnas.201510159SI.pdf"
download.file(url, temp_file, mode="wb")
txt <- pdf_text(temp_file)
file.remove(temp_file)
raw_data_research_funding_rates <- txt[2]
library(tidyverse)
raw_data_research_funding_rates %>% head
tab <- str_split(raw_data_research_funding_rates, "\n")
tab <- tab[[1]]
tab %>% head
the_names_1 <- tab[3]
the_names_2 <- tab[4]
the_names_1 <- the_names_1 %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
the_names_1
the_names_2 <- the_names_2 %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
the_names_2
tmp_names <- str_c(rep(the_names_1, each = 3), the_names_2[-1], sep = "_")
the_names <- c(the_names_2[1], tmp_names) %>%
str_to_lower() %>%
str_replace_all("\\s", "_")
new_research_funding_rates <- tab[6:14] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names) %>%
mutate_at(-1, parse_number)
head(new_research_funding_rates)
identical(new_research_funding_rates, research_funding_rates)
?pandoc
??pandoc
??knitr
??sweave
R.version
install.packages("installr") # install
setInternet2(TRUE) # only for R versions older than 3.3.0
installr::updateR() # updating R.
# If you wish it to go faster, run: installr::updateR(T)
installr::updateR(T)
1
?installr
R.version.string
getwd()
setwd("~/EYL/R LaTeX workshop/Git/R-MD-LaTeX/Dynamic documents demos for presentation/Hybrid")
getwd()
?calltopandoc
getwd()
getwd()
?pandoc
knit("LaTeX.Rnw")
knitr::knit("LaTeX.Rnw")
?knitr
?knit
